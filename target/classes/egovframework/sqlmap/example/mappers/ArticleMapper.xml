<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.dao.ArticleDao">
    <resultMap id="articleResultMap" type="ArticleDTO">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="memberId" column="member_id" />
        <result property="categoryValue" column="category" /> <!-- category를 categoryValue에 매핑 -->
        <result property="startDate" column="start_date" />
        <result property="endDate" column="end_date" />
        <result property="createdAt" column="created_at" />
    </resultMap>

    <select id="totalArticleCount" resultType="int">
        select count(id) from article where 1=1
        <if test="searchField != null and searchField !=''">
            <choose>
                <when test="searchField=='title'">
                    AND title LIKE CONCAT('%', #{searchValue}, '%')
                </when>
                <when test="searchField=='memberId'">
                    AND member_id LIKE CONCAT('%', #{searchValue}, '%')
                </when>
                <when test="searchField=='category'">
                    and category = cast(#{searchValue} as integer)
                </when>
                <when test="searchField=='startDate'">
                    AND start_date = cast(#{searchValue} as date)+ INTERVAL '1 day'
                </when>
                <when test="searchField=='endDate'">
                    AND end_date = cast(#{searchValue} as date)+ INTERVAL '1 day'
                </when>
            </choose>
        </if>

    </select>
    <select id="findAllArticle" resultMap="articleResultMap">
        SELECT * FROM article  where 1=1
        <if test="searchField != null and searchField !=''">
            <choose>
                <when test="searchField=='title'">
                    AND title LIKE CONCAT('%', #{searchValue}, '%')
                </when>
                <when test="searchField=='memberId'">
                    AND member_id LIKE CONCAT('%', #{searchValue}, '%')
                </when>
                <when test="searchField=='category'">
                    and category = cast(#{searchValue} as integer)
                </when>
                <when test="searchField=='startDate'">
                    AND start_date = cast(#{searchValue} as date)+ INTERVAL '1 day'
                </when>
                <when test="searchField=='endDate'">
                    AND end_date = cast(#{searchValue} as date)+ INTERVAL '1 day'
                </when>
            </choose>
        </if>
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET (#{page}-1) * #{pageSize}
    </select>
    <select id="findById"  resultMap="articleResultMap">
        select * from article where id = #{id}
    </select>
    <delete id="deleteById" >
        delete from article where id=#{id}
    </delete>
    <insert id="save" parameterType="egovframework.example.dto.ArticleDto" >
        insert into article (title, content, member_id, category, start_date, end_date) values ( #{title}, #{content}, #{memberId}, #{categoryValue}, #{startDate}, #{endDate})
    </insert>
    <select id="returningId" resultType="int">
        select currval('article_id_seq')
    </select>
    <update id="update" parameterType="egovframework.example.dto.ArticleDto">
        update article set title=#{title}, content=#{content}, category=#{categoryValue}, start_date= #{startDate}, end_date=#{endDate} where id=#{id}
    </update>
    <select id="articleCountPerCategory" resultType="egovframework.example.dto.CategoryDto">
        select category, count(*) AS count from article group by category order by category
    </select>
    <select id="articleCountPerMemberId" resultType="egovframework.example.dto.MemberArticleDto">
        select member_id, count(*) as count from article group by member_id order by count desc limit 5
    </select>
    <select id="articleCountDaily" resultType="egovframework.example.dto.DailyArticleDto">
    select date(created_at) as date, count(*) as count from article group by date(created_at) order by date(created_at) desc
    </select>


</mapper>